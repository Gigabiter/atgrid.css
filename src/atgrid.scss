/*
/* atGrid.css v4 - Attribute-based CSS Grid System
/* https://github.com/kolcethompsonco/atgrid.css
/* Licensed under MIT License - James Kolce <contact@jameskolce.com>
*/

//
// Configuration
// ----------------------------------------

// Max width for container
$container-width: 1200px !default;

// Gutter size in pixels
$gutter: 30px !default;

// Number of columns in a row
$num-columns: 12 !default;

// Prefix for attributes
$prefix: '' !default;

// Below this size, the columns will collapse
$breakpoint: 420px !default;

// If you ONLY want to use the mixins for "semantic grids" set this to true
$only-semantic: false !default;


//
// Styles
// ----------------------------------------

[container] {
  margin-left: auto;
  margin-right: auto;
  max-width: $container-width;
  padding-left: $gutter/2;
  padding-right: $gutter/2;
  box-sizing: border-box;
}

[grid] {
  display: flex;
  margin-left: $gutter / -2;
  margin-right: $gutter / -2;
}

[column] {
  flex: 1;
  box-sizing: border-box;
}

// Collapse columns on breakpoint
@media (max-width: $breakpoint) {
  [grid] {
    flex-direction: column;
  }
}


//
// Gutters
//

[column] {
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
}

//
// No Gutters
//

[grid~="ng"] {
  margin-left: 0;
  margin-right: 0;

  [column] {
    padding-left: 0;
    padding-right: 0;
  }
}

//
// Alignment of columns
//

[grid~="top"] {
  align-items: flex-start;
}

[grid~="center"] {
  align-items: center;
}

[grid~="bottom"] {
  align-items: flex-end;
}

//
// Alignment of individual columns
//

[column~="top"] {
  align-self: flex-start;
}

[column~="center"] {
  align-self: flex-end;
}

[column~="bottom"] {
  align-self: center;
}

//
// Column widths
//

@for $i from 1 through $num-columns {
  [#{$prefix}column~="#{$i}"] {
    flex: 0 1 ($i/$num-columns) * 100%;
  }
}

//
// Column offsets
//

@for $i from 1 through $num-columns {
  [#{$prefix}column~="+#{$i}"] {
    margin-left: ($i/$num-columns) * 100%;
  }
}
